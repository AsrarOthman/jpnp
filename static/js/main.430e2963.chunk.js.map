{"version":3,"sources":["DataFetcher.js","Table.js","App.js","reportWebVitals.js","index.js"],"names":["DataFetcher","_ref","onDataFetched","fetchData","async","formattedData","axios","get","data","values","slice","map","row","name","sales","parseInt","month","useEffect","intervalId","setInterval","clearInterval","Table","React","createElement","index","key","App","setData","useState","fetchedData","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"6MAiCeA,MA9BKC,IAAuB,IAAtBC,cAAEA,GAAeD,EACpC,MAIME,EAAYC,UAChB,MAKMC,SAJiBC,IAAMC,IADjB,yJAEUC,KAAKC,OAGAC,MAAM,GAAGC,IAAKC,IAAG,CAC1CC,KAAMD,EAAI,GACVE,MAAOC,SAASH,EAAI,GAAI,IACxBI,MAAOJ,EAAI,MAGbV,EAAcG,IAUhB,OAPAY,oBAAU,KACRd,IACA,MAAMe,EAAaC,YAAYhB,EAAW,KAE1C,MAAO,IAAMiB,cAAcF,IAC1B,CAAChB,IAEG,MCLMmB,MAvBDpB,IAAc,IAAbO,KAAEA,GAAMP,EACrB,OACEqB,IAAAC,cAAA,aACED,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAI,QACJD,IAAAC,cAAA,UAAI,SACJD,IAAAC,cAAA,UAAI,WAGRD,IAAAC,cAAA,aACGf,EAAKG,IAAI,CAACC,EAAKY,IACdF,IAAAC,cAAA,MAAIE,IAAKD,GACPF,IAAAC,cAAA,UAAKX,EAAIC,MACTS,IAAAC,cAAA,UAAKX,EAAIE,OACTQ,IAAAC,cAAA,UAAKX,EAAII,YCGNU,MAhBHA,KACV,MAAOlB,EAAMmB,GAAWC,mBAAS,IAMjC,OACEN,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,aACJD,IAAAC,cAACvB,EAAW,CAACE,cAPU2B,IACzBF,EAAQE,MAONP,IAAAC,cAACF,EAAK,CAACb,KAAMA,MCHJsB,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAKlC,IAAiD,IAAhDoC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASxC,EACpEoC,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHxB,IAAAC,cAACD,IAAMyB,WAAU,KACfzB,IAAAC,cAACG,EAAG,QAORI","file":"static/js/main.430e2963.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst DataFetcher = ({ onDataFetched }) => {\n  const SPREADSHEET_ID = \"1_2kDcvAaS5tIvbWbLDMMcwZMNpiAEorv38vXS_z2a-s\"; // Gantikan dengan Spreadsheet ID anda\n  const API_KEY = \"AIzaSyDXvVBBpt50wgt0qBomxI4Wohrjg5OoqHk\"; // Gantikan dengan API Key anda\n  const SHEET_NAME = \"Sheet1\"; // Nama Sheet anda\n\n  const fetchData = async () => {\n    const url = `https://sheets.googleapis.com/v4/spreadsheets/${SPREADSHEET_ID}/values/${SHEET_NAME}?key=${API_KEY}`;\n    const response = await axios.get(url);\n    const rows = response.data.values;\n\n    // Format data\n    const formattedData = rows.slice(1).map((row) => ({\n      name: row[0],\n      sales: parseInt(row[1], 10),\n      month: row[2],\n    }));\n\n    onDataFetched(formattedData); // Hantar data ke parent component\n  };\n\n  useEffect(() => {\n    fetchData(); // Ambil data pertama kali semasa load\n    const intervalId = setInterval(fetchData, 60000); // Memuat semula data setiap 60 saat\n\n    return () => clearInterval(intervalId); // Bersihkan interval semasa komponen dibuang\n  }, [onDataFetched]);\n\n  return null;\n};\n\nexport default DataFetcher;\n","import React from \"react\";\n\nconst Table = ({ data }) => {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sales</th>\n          <th>Month</th>\n        </tr>\n      </thead>\n      <tbody>\n        {data.map((row, index) => (\n          <tr key={index}>\n            <td>{row.name}</td>\n            <td>{row.sales}</td>\n            <td>{row.month}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default Table;\n","import React, { useState } from \"react\";\nimport DataFetcher from \"./DataFetcher\";\nimport Table from \"./Table\";\n\nconst App = () => {\n  const [data, setData] = useState([]);\n\n  const handleDataFetched = (fetchedData) => {\n    setData(fetchedData);\n  };\n\n  return (\n    <div>\n      <h1>Dashboard</h1>\n      <DataFetcher onDataFetched={handleDataFetched} />\n      <Table data={data} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}